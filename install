#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import argparse
import platform
import shutil
import subprocess


toplevel = argparse.ArgumentParser()
toplevel.add_argument('--all', action='store_true', help='install all')
toplevel.add_argument('--force', action='store_true', help='force install')

subcommands = toplevel.add_subparsers(dest='invoked_command')

cmd_all = subcommands.add_parser('all', help='install all')
cmd_config = subcommands.add_parser('config', help='install config (as symlink)')
cmd_package = subcommands.add_parser('package', help='install packages')
cmd_ocaml = subcommands.add_parser('ocaml', help='install OCaml')
cmd_cargo = subcommands.add_parser('cargo', help='install cargo packages')
cmd_font = subcommands.add_parser('font', help='install fonts')
cmd_emacs = subcommands.add_parser('emacs', help='install emacs settings')


args = toplevel.parse_args()

os_type = platform.system()
uid = os.geteuid()  # 0 if root


class Installer:
    def __init__(self, manager, packages, sudo=False, yes=False):
        if not shutil.which(manager):
            raise FileNotFoundError('No such executable: {}'.format(manager))

        self.sudo = sudo
        self.yes = yes
        self.manager = manager
        self.packages = packages

    def install(self):
        cmd = ['sudo'] if self.sudo else []
        cmd += [self.manager, 'install']
        cmd += ['--yes'] if self.yes else []
        cmd += self.packages
        subprocess.run(cmd)
